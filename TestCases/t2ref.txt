    .pos 0
    irmovq stack, %rsp # Set up stack pointer
    call main # Execute main program
    halt # Terminate program

main:
    irmovq $0,%rdi
    irmovq $4,%rsi
    irmovq $3,%rdx
    rmmovq %rdx,(%rdi)
    irmovq $7,%rdx
    rmmovq %rdx,8(%rdi)
    irmovq $9,%rdx
    rmmovq %rdx,16(%rdi)
    irmovq $13,%rdx
    rmmovq %rdx, 24(%rdi)
    call sum # sum(array, 4)
    ret

# long sum(long *start, long count)
# start in %rdi, count in %rsi
sum:
    irmovq $8,%r8 # Constant 8
    irmovq $1,%r9 # Constant 1
    xorq %rax,%rax # sum = 0
    andq %rsi,%rsi # Set CC
    jmp test # Goto test
loop:
    mrmovq (%rdi),%r10 # Get *start
    addq %r10,%rax # Add to sum
    addq %r8,%rdi # start++
    subq %r9,%rsi # count--. Set CC
test:
    jne loop # Stop when 0
    ret # Return
    
     # Stack starts here and grows to lower addresses
    .pos 0x200
stack:




  0x0000:                      |     .pos 0
  0x0000: 30f40002000000000000 |     irmovq stack, %rsp # Set up stack pointer
  0x000a: 801400000000000000   |     call main # Execute main program
  0x0013: 00                   |     halt # Terminate program
                               | 
  0x0014:                      | main:
  0x0014: 30f70000000000000000 |     irmovq $0,%rdi
  0x001e: 30f60400000000000000 |     irmovq $4,%rsi
  0x0028: 30f20300000000000000 |     irmovq $3,%rdx
  0x0032: 40270000000000000000 |     rmmovq %rdx,(%rdi)
  0x003c: 30f20700000000000000 |     irmovq $7,%rdx
  0x0046: 40270800000000000000 |     rmmovq %rdx,8(%rdi)
  0x0050: 30f20900000000000000 |     irmovq $9,%rdx
  0x005a: 40271000000000000000 |     rmmovq %rdx,16(%rdi)
  0x0064: 30f20d00000000000000 |     irmovq $13,%rdx
  0x006e: 40271800000000000000 |     rmmovq %rdx, 24(%rdi)
  0x0078: 808200000000000000   |     call sum # sum(array, 4)
  0x0081: 90                   |     ret
                               | 
                               | # long sum(long *start, long count)
                               | # start in %rdi, count in %rsi
  0x0082:                      | sum:
  0x0082: 30f80800000000000000 |     irmovq $8,%r8 # Constant 8
  0x008c: 30f90100000000000000 |     irmovq $1,%r9 # Constant 1
  0x0096: 6300                 |     xorq %rax,%rax # sum = 0
  0x0098: 6266                 |     andq %rsi,%rsi # Set CC
  0x009a: 70b300000000000000   |     jmp test # Goto test
  0x00a3:                      | loop:
  0x00a3: 50a70000000000000000 |     mrmovq (%rdi),%r10 # Get *start
  0x00ad: 60a0                 |     addq %r10,%rax # Add to sum
  0x00af: 6087                 |     addq %r8,%rdi # start++
  0x00b1: 6196                 |     subq %r9,%rsi # count--. Set CC
  0x00b3:                      | test:
  0x00b3: 74a300000000000000   |     jne loop # Stop when 0
  0x00bc: 90                   |     ret # Return
                               |     
                               |      # Stack starts here and grows to lower addresses
  0x00bd:                      |     .pos 0x200
  0x0200:                      | stack:
