    .pos 0
    irmovq stack, %rsp # Set up stack pointer
    call main # Execute main program
    halt # Terminate program
# Array of 4 elements
.align 8
array:
    .quad 0x000d000d000d
    .quad 0x00c000c000c0
    .quad 0x0b000b000b00
    .quad 0xa000a000a000

main:
    irmovq array,%rdi
    irmovq $4,%rsi
    call sum # sum(array, 4)
    ret

# long sum(long *start, long count)
# start in %rdi, count in %rsi
sum:
    irmovq $8,%r8 # Constant 8
    irmovq $1,%r9 # Constant 1
    xorq %rax,%rax # sum = 0
    andq %rsi,%rsi # Set CC
    jmp test # Goto test
loop:
    mrmovq (%rdi),%r10 # Get *start
    addq %r10,%rax # Add to sum
    addq %r8,%rdi # start++
    subq %r9,%rsi # count--. Set CC
test:
    jne loop # Stop when 0
    ret # Return
    
     # Stack starts here and grows to lower addresses
    .pos 0x200
stack:


0x0000:                        |     .pos 0
0x0000: 30f40002000000000000   |     irmovq stack, %rsp # Set up stack pointer
0x000a: 803800000000000000     |     call main # Execute main program
0x0013: 00                     |     halt # Terminate program
                               | # Array of 4 elements
0x0014:                        | .align 8
0x0018:                        | array:
0x0018: 0d000d000d             |     .quad 0x000d000d000d
0x0020: c000c000c0             |     .quad 0x00c000c000c0
0x0028: 000b000b000b           |     .quad 0x0b000b000b00
0x0030: 00a000a000a0           |     .quad 0xa000a000a000
                               | 
0x0038:                        | main:
0x0038: 30f71800000000000000   |     irmovq array,%rdi
0x0042: 30f60400000000000000   |     irmovq $4,%rsi
0x004c: 805600000000000000     |     call sum # sum(array, 4)
0x0055: 90                     |     ret
                               | 
                               | # long sum(long *start, long count)
                               | # start in %rdi, count in %rsi
0x0056:                        | sum:
0x0056: 30f80800000000000000   |     irmovq $8,%r8 # Constant 8
0x0060: 30f90100000000000000   |     irmovq $1,%r9 # Constant 1
0x006a: 6300                   |     xorq %rax,%rax # sum = 0
0x006c: 6266                   |     andq %rsi,%rsi # Set CC
0x006e: 708700000000000000     |     jmp test # Goto test
0x0077:                        | loop:
0x0077: 50a70000000000000000   |     mrmovq (%rdi),%r10 # Get *start
0x0081: 60a0                   |     addq %r10,%rax # Add to sum
0x0083: 6087                   |     addq %r8,%rdi # start++
0x0085: 6196                   |     subq %r9,%rsi # count--. Set CC
0x0087:                        | test:
0x0087: 747700000000000000     |     jne loop # Stop when 0
0x0090: 90                     |     ret # Return
                               |     
                               |      # Stack starts here and grows to lower addresses
0x0091:                        |     .pos 0x200
0x0200:

